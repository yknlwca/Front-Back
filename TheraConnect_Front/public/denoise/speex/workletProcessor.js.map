{"version":3,"sources":["<define:window>","../../node_modules/.pnpm/@sapphi-red+speex-preprocess-wasm@0.3.1/node_modules/@sapphi-red/speex-preprocess-wasm/src/SpeexPreprocessCtlRequest.ts","../../node_modules/.pnpm/@sapphi-red+speex-preprocess-wasm@0.3.1/node_modules/@sapphi-red/speex-preprocess-wasm/src/SpeexPreprocessor.ts","../../node_modules/.pnpm/@sapphi-red+speex-preprocess-wasm@0.3.1/node_modules/@sapphi-red/speex-preprocess-wasm/wasm-out/speex.js","../../src/speex/processor.ts","../../src/speex/workletUtil.ts","../../src/speex/workletProcessor.ts"],"sourcesContent":["","export const SpeexPreprocessCtlRequest = {\n  /** Set preprocessor denoiser state */\n  SET_DENOISE: 0,\n  /** Get preprocessor denoiser state */\n  GET_DENOISE: 1,\n\n  /** Set preprocessor Automatic Gain Control state */\n  SET_AGC: 2,\n  /** Get preprocessor Automatic Gain Control state */\n  GET_AGC: 3,\n\n  /** Set preprocessor Voice Activity Detection state */\n  SET_VAD: 4,\n  /** Get preprocessor Voice Activity Detection state */\n  GET_VAD: 5,\n\n  /** Set preprocessor Automatic Gain Control level (float) */\n  SET_AGC_LEVEL: 6,\n  /** Get preprocessor Automatic Gain Control level (float) */\n  GET_AGC_LEVEL: 7,\n\n  // NOTE: de-reverberation is currently disabled\n  // /** Set preprocessor dereverb state */\n  // SET_DEREVERB: 8,\n  // /** Get preprocessor dereverb state */\n  // GET_DEREVERB: 9,\n\n  // NOTE: de-reverberation is currently disabled\n  // /** Set preprocessor dereverb level */\n  // SET_DEREVERB_LEVEL: 10,\n  // /** Get preprocessor dereverb level */\n  // GET_DEREVERB_LEVEL: 11,\n\n  // NOTE: de-reverberation is currently disabled\n  // /** Set preprocessor dereverb decay */\n  // SET_DEREVERB_DECAY: 12,\n  // /** Get preprocessor dereverb decay */\n  // GET_DEREVERB_DECAY: 13,\n\n  /** Set probability required for the VAD to go from silence to voice */\n  SET_PROB_START: 14,\n  /** Get probability required for the VAD to go from silence to voice */\n  GET_PROB_START: 15,\n\n  /** Set probability required for the VAD to stay in the voice state (integer percent) */\n  SET_PROB_CONTINUE: 16,\n  /** Get probability required for the VAD to stay in the voice state (integer percent) */\n  GET_PROB_CONTINUE: 17,\n\n  /** Set maximum attenuation of the noise in dB (negative number) */\n  SET_NOISE_SUPPRESS: 18,\n  /** Get maximum attenuation of the noise in dB (negative number) */\n  GET_NOISE_SUPPRESS: 19,\n\n  /** Set maximum attenuation of the residual echo in dB (negative number) */\n  SET_ECHO_SUPPRESS: 20,\n  /** Get maximum attenuation of the residual echo in dB (negative number) */\n  GET_ECHO_SUPPRESS: 21,\n\n  /** Set maximum attenuation of the residual echo in dB when near end is active (negative number) */\n  SET_ECHO_SUPPRESS_ACTIVE: 22,\n  /** Get maximum attenuation of the residual echo in dB when near end is active (negative number) */\n  GET_ECHO_SUPPRESS_ACTIVE: 23,\n\n  // NOTE: needs SpeexEchoState pointer\n  // /** Set the corresponding echo canceller state so that residual echo suppression can be performed (NULL for no residual echo suppression) */\n  // SET_ECHO_STATE: 24,\n  // /** Get the corresponding echo canceller state */\n  // GET_ECHO_STATE: 25,\n\n  /** Set maximal gain increase in dB/second (int32) */\n  SET_AGC_INCREMENT: 26,\n\n  /** Get maximal gain increase in dB/second (int32) */\n  GET_AGC_INCREMENT: 27,\n\n  /** Set maximal gain decrease in dB/second (int32) */\n  SET_AGC_DECREMENT: 28,\n\n  /** Get maximal gain decrease in dB/second (int32) */\n  GET_AGC_DECREMENT: 29,\n\n  /** Set maximal gain in dB (int32) */\n  SET_AGC_MAX_GAIN: 30,\n\n  /** Get maximal gain in dB (int32) */\n  GET_AGC_MAX_GAIN: 31,\n\n  /*  Can't set loudness */\n  /** Get loudness */\n  GET_AGC_LOUDNESS: 33,\n\n  /*  Can't set gain */\n  /** Get current gain (int32 percent) */\n  GET_AGC_GAIN: 35,\n\n  /*  Can't set spectrum size */\n  /** Get spectrum size for power spectrum (int32) */\n  GET_PSD_SIZE: 37,\n\n  /*  Can't set power spectrum */\n  /** Get power spectrum (int32[] of squared values) */\n  GET_PSD: 39,\n\n  /*  Can't set noise size */\n  /** Get spectrum size for noise estimate (int32)  */\n  GET_NOISE_PSD_SIZE: 41,\n\n  /*  Can't set noise estimate */\n  /** Get noise estimate (int32[] of squared values) */\n  GET_NOISE_PSD: 43,\n\n  /* Can't set speech probability */\n  /** Get speech probability in last frame (int32).  */\n  GET_PROB: 45,\n\n  /** Set preprocessor Automatic Gain Control level (int32) */\n  SET_AGC_TARGET: 46,\n  /** Get preprocessor Automatic Gain Control level (int32) */\n  GET_AGC_TARGET: 47\n} as const\n\nexport type SpeexPreprocessCtlRequest =\n  (typeof SpeexPreprocessCtlRequest)[keyof typeof SpeexPreprocessCtlRequest]\n","import {\n  SpeexModule,\n  SpeexPreprocessState,\n  F32Ptr,\n  I16Ptr,\n  I32Ptr\n} from '../wasm-out/speex'\nimport { SpeexPreprocessCtlRequest } from './SpeexPreprocessCtlRequest'\n\nexport type LoadOptions = Pick<SpeexModule, 'locateFile' | 'wasmBinary'>\n\nconst I16_BYTE_SIZE = Int16Array.BYTES_PER_ELEMENT\nconst I32_BYTE_SIZE = Int32Array.BYTES_PER_ELEMENT\nconst F32_BYTE_SIZE = Float32Array.BYTES_PER_ELEMENT\n\nconst I16_MAX_NUMBER = 2 ** 16 / 2 - 1\n\nexport default class SpeexPreprocessor {\n  private readonly speexModule: Readonly<SpeexModule>\n  readonly frameSize: number\n  readonly samplingRate: number\n\n  private readonly state: SpeexPreprocessState\n  private processBuffPtr: I16Ptr\n  private processI16Buff: Int16Array\n\n  private ctlBuffPtr?: I32Ptr | F32Ptr\n\n  constructor(\n    speexModule: Readonly<SpeexModule>,\n    frameSize: number,\n    samplingRate: number\n  ) {\n    this.speexModule = speexModule\n    this.frameSize = frameSize\n    this.samplingRate = samplingRate\n\n    this.state = this.speexModule._speex_preprocess_state_init(\n      this.frameSize,\n      this.samplingRate\n    )\n    this.processBuffPtr = this.speexModule._malloc(\n      this.frameSize * I16_BYTE_SIZE\n    )\n    this.processI16Buff = new Int16Array(this.frameSize)\n\n    if (!this.processBuffPtr) {\n      this.destroy()\n      throw Error('Failed to allocate process buffer.')\n    }\n  }\n\n  private mallocCtlBuffPtr() {\n    if (this.ctlBuffPtr !== undefined) return\n    this.ctlBuffPtr = this.speexModule._malloc(\n      4 /** I32_BYTE_SIZE && F32_BYTE_SIZE */\n    )\n\n    if (!this.ctlBuffPtr) {\n      throw Error('Failed to allocate ctl buffer.')\n    }\n  }\n\n  private ctl(req: SpeexPreprocessCtlRequest, output?: unknown) {\n    const res = this.speexModule._speex_preprocess_ctl(this.state, req, output)\n    if (res === -1) {\n      throw new Error(`Unknown request: ${req}`)\n    }\n  }\n\n  private ctlGetI32(req: SpeexPreprocessCtlRequest) {\n    this.mallocCtlBuffPtr()\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const ctlBuffIndex = this.ctlBuffPtr! / I32_BYTE_SIZE\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.ctl(req, this.ctlBuffPtr!)\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.speexModule.HEAP32[ctlBuffIndex]!\n  }\n  private ctlSetI32(req: SpeexPreprocessCtlRequest, value: number) {\n    this.mallocCtlBuffPtr()\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const ctlBuffIndex = this.ctlBuffPtr! / I32_BYTE_SIZE\n    this.speexModule.HEAP32[ctlBuffIndex] = value\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.ctl(req, this.ctlBuffPtr!)\n  }\n\n  private ctlGetBool(req: SpeexPreprocessCtlRequest) {\n    return this.ctlGetI32(req) === 1\n  }\n  private ctlSetBool(req: SpeexPreprocessCtlRequest, value: boolean) {\n    this.ctlSetI32(req, value ? 1 : 0)\n  }\n\n  private ctlGetF32(req: SpeexPreprocessCtlRequest) {\n    this.mallocCtlBuffPtr()\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const ctlBuffIndex = this.ctlBuffPtr! / F32_BYTE_SIZE\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.ctl(req, this.ctlBuffPtr!)\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.speexModule.HEAPF32[ctlBuffIndex]!\n  }\n  private ctlSetF32(req: SpeexPreprocessCtlRequest, value: number) {\n    this.mallocCtlBuffPtr()\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const ctlBuffIndex = this.ctlBuffPtr! / F32_BYTE_SIZE\n    this.speexModule.HEAPF32[ctlBuffIndex] = value\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.ctl(req, this.ctlBuffPtr!)\n  }\n\n  private ctlGetI32Array(req: SpeexPreprocessCtlRequest, size: number) {\n    const buffPtr = this.speexModule._malloc(size * I32_BYTE_SIZE)\n    const buffIndex = buffPtr / I32_BYTE_SIZE\n\n    this.ctl(req, buffPtr)\n\n    const result = new Int32Array(size)\n    const res = this.speexModule.HEAP32.subarray(buffIndex, buffIndex + size)\n    result.set(res)\n\n    this.speexModule._free(buffPtr)\n\n    return result\n  }\n\n  get denoise() {\n    return this.ctlGetBool(SpeexPreprocessCtlRequest.GET_DENOISE)\n  }\n  set denoise(value: boolean) {\n    this.ctlSetBool(SpeexPreprocessCtlRequest.SET_DENOISE, value)\n  }\n\n  get agc() {\n    return this.ctlGetBool(SpeexPreprocessCtlRequest.GET_AGC)\n  }\n  set agc(value: boolean) {\n    this.ctlSetBool(SpeexPreprocessCtlRequest.SET_AGC, value)\n  }\n\n  get vad() {\n    return this.ctlGetBool(SpeexPreprocessCtlRequest.GET_VAD)\n  }\n  set vad(value: boolean) {\n    this.ctlSetBool(SpeexPreprocessCtlRequest.SET_VAD, value)\n  }\n\n  get agcLevel() {\n    return this.ctlGetF32(SpeexPreprocessCtlRequest.GET_AGC_LEVEL)\n  }\n  set agcLevel(value: number) {\n    this.ctlSetF32(SpeexPreprocessCtlRequest.SET_AGC_LEVEL, value)\n  }\n\n  get probStart() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_PROB_START)\n  }\n  set probStart(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_PROB_START, value)\n  }\n\n  get probContinue() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_PROB_CONTINUE)\n  }\n  set probContinue(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_PROB_CONTINUE, value)\n  }\n\n  get noiseSuppress() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_NOISE_SUPPRESS)\n  }\n  set noiseSuppress(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_NOISE_SUPPRESS, value)\n  }\n\n  get echoSuppress() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_ECHO_SUPPRESS)\n  }\n  set echoSuppress(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_ECHO_SUPPRESS, value)\n  }\n\n  get echoSuppressActive() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_ECHO_SUPPRESS_ACTIVE)\n  }\n  set echoSuppressActive(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_ECHO_SUPPRESS_ACTIVE, value)\n  }\n\n  get agcIncrement() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_AGC_INCREMENT)\n  }\n  set agcIncrement(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_AGC_INCREMENT, value)\n  }\n\n  get agcDecrement() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_AGC_DECREMENT)\n  }\n  set agcDecrement(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_AGC_DECREMENT, value)\n  }\n\n  get agcMaxGain() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_AGC_MAX_GAIN)\n  }\n  set agcMaxGain(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_AGC_MAX_GAIN, value)\n  }\n\n  get agcLoudness() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_AGC_LOUDNESS)\n  }\n\n  get agcGain() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_AGC_GAIN)\n  }\n\n  get psdSize() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_PSD_SIZE)\n  }\n\n  get psd() {\n    return this.ctlGetI32Array(SpeexPreprocessCtlRequest.GET_PSD, this.psdSize)\n  }\n\n  get noisePsdSize() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_NOISE_PSD_SIZE)\n  }\n\n  get noisePsd() {\n    return this.ctlGetI32Array(\n      SpeexPreprocessCtlRequest.GET_NOISE_PSD,\n      this.noisePsdSize\n    )\n  }\n\n  get prob() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_PROB)\n  }\n\n  get agcTarget() {\n    return this.ctlGetI32(SpeexPreprocessCtlRequest.GET_AGC_TARGET)\n  }\n  set agcTarget(value: number) {\n    this.ctlSetI32(SpeexPreprocessCtlRequest.SET_AGC_TARGET, value)\n  }\n\n  private assertFrameSize(frame: ArrayLike<number>) {\n    if (frame.length !== this.frameSize) {\n      throw new Error(\n        `Frame size differs. Expected: ${this.frameSize}. Actual: ${frame.length}.`\n      )\n    }\n  }\n\n  processInt16(frame: Int16Array) {\n    this.assertFrameSize(frame)\n\n    const processBuffIndex = this.processBuffPtr / I16_BYTE_SIZE\n    this.speexModule.HEAP16.set(frame, processBuffIndex)\n\n    const vad = this.speexModule._speex_preprocess_run(\n      this.state,\n      this.processBuffPtr\n    )\n    const processedBuff = this.speexModule.HEAP16.subarray(\n      processBuffIndex,\n      processBuffIndex + this.frameSize\n    )\n    frame.set(processedBuff)\n\n    return vad === 1\n  }\n\n  process(frame: Float32Array) {\n    this.assertFrameSize(frame)\n\n    for (let i = 0; i < frame.length; i++) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.processI16Buff[i] = frame[i]! * I16_MAX_NUMBER\n    }\n\n    const vad = this.processInt16(this.processI16Buff)\n\n    for (let i = 0; i < frame.length; i++) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      frame[i] = this.processI16Buff[i]! / I16_MAX_NUMBER\n    }\n\n    return vad\n  }\n\n  destroy() {\n    this.speexModule._free(this.processBuffPtr)\n    if (this.ctlBuffPtr !== undefined) {\n      this.speexModule._free(this.ctlBuffPtr)\n    }\n  }\n}\n","\nvar Module = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(Module = {})  {\n\nvar Module=typeof Module!=\"undefined\"?Module:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"speex.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(binaryFile){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+binaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(binaryFile)})}}return Promise.resolve().then(function(){return getBinary(binaryFile)})}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(function(binary){return WebAssembly.instantiate(binary,imports)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(binaryFile)&&typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(binaryFile,imports,callback)})})}else{return instantiateArrayBuffer(binaryFile,imports,callback)}}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"f\"];updateMemoryViews();wasmTable=Module[\"asm\"][\"n\"];addOnInit(Module[\"asm\"][\"g\"]);removeRunDependency(\"wasm-instantiate\");return exports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function getHeapMax(){return 2147483648}function emscripten_realloc_buffer(size){var b=wasmMemory.buffer;try{wasmMemory.grow(size-b.byteLength+65535>>>16);updateMemoryViews();return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function _fd_close(fd){return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){return 70}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j])}num+=len}HEAPU32[pnum>>2]=num;return 0}var wasmImports={\"d\":_emscripten_memcpy_big,\"e\":_emscripten_resize_heap,\"c\":_fd_close,\"b\":_fd_seek,\"a\":_fd_write};var asm=createWasm();var ___wasm_call_ctors=function(){return(___wasm_call_ctors=Module[\"asm\"][\"g\"]).apply(null,arguments)};var _speex_preprocess_state_init=Module[\"_speex_preprocess_state_init\"]=function(){return(_speex_preprocess_state_init=Module[\"_speex_preprocess_state_init\"]=Module[\"asm\"][\"h\"]).apply(null,arguments)};var _speex_preprocess_state_destroy=Module[\"_speex_preprocess_state_destroy\"]=function(){return(_speex_preprocess_state_destroy=Module[\"_speex_preprocess_state_destroy\"]=Module[\"asm\"][\"i\"]).apply(null,arguments)};var _speex_preprocess_run=Module[\"_speex_preprocess_run\"]=function(){return(_speex_preprocess_run=Module[\"_speex_preprocess_run\"]=Module[\"asm\"][\"j\"]).apply(null,arguments)};var _speex_preprocess_ctl=Module[\"_speex_preprocess_ctl\"]=function(){return(_speex_preprocess_ctl=Module[\"_speex_preprocess_ctl\"]=Module[\"asm\"][\"k\"]).apply(null,arguments)};var ___errno_location=function(){return(___errno_location=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"l\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"m\"]).apply(null,arguments)};var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return Module.ready\n}\n\n);\n})();\nexport default Module;","import {\n  SpeexPreprocessor,\n  type SpeexModule\n} from '@sapphi-red/speex-preprocess-wasm'\nimport type { Process } from '../utils/process'\n\nexport const createProcessor = (\n  module: SpeexModule,\n  {\n    bufferSize,\n    maxChannels,\n    sampleRate\n  }: { bufferSize: number; maxChannels: number; sampleRate: number }\n) => {\n  const preprocessors = Array.from(\n    { length: maxChannels },\n    () => new SpeexPreprocessor(module, bufferSize, sampleRate)\n  )\n  for (const preprocessor of preprocessors) {\n    preprocessor.denoise = true\n  }\n\n  const getProperty = <K extends keyof SpeexPreprocessor>(\n    k: K\n  ): SpeexPreprocessor[K] => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return preprocessors[0]![k]\n  }\n  const setProperty = <K extends keyof SpeexPreprocessor>(\n    k: K,\n    v: SpeexPreprocessor[K]\n  ) => {\n    for (const preprocessor of preprocessors) {\n      preprocessor[k] = v\n    }\n  }\n  const destroy = () => {\n    for (const preprocessor of preprocessors) {\n      preprocessor.destroy()\n    }\n  }\n\n  const process: Process = (input, output) => {\n    const channels = Math.min(input.length, maxChannels)\n    for (let i = 0; i < channels; i++) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      preprocessors[i]!.process(input[i]!)\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      output[i]!.set(input[i]!)\n    }\n  }\n\n  return { process, getProperty, setProperty, destroy }\n}\n","import type { TypedAudioWorkletOptions } from '../utils/TypedAudioWorklet'\nimport type { SpeexProcessorOptions } from './options'\n\nexport const id = '@sapphi-red/web-noise-suppressor/speex'\n\nexport type SpeexWorkletOptions =\n  TypedAudioWorkletOptions<SpeexProcessorOptions>\n","import { loadSpeexModule } from '@sapphi-red/speex-preprocess-wasm'\nimport type { Process } from '../utils/process'\nimport { createProcessor } from './processor'\nimport { id, type SpeexWorkletOptions } from './workletUtil'\n\nconst AudioWorkletBufferSize = 128\n\nclass SpeexWorkletProcessor extends AudioWorkletProcessor {\n  private processor: { process: Process; destroy: () => void } | undefined\n  private destroyed = false\n\n  constructor(options: SpeexWorkletOptions) {\n    super()\n\n    this.port.addEventListener('message', e => {\n      if (e.data === 'destroy') {\n        this.destroy()\n      }\n    })\n\n    // load\n    ;(async () => {\n      const speexModule = await loadSpeexModule({\n        locateFile: (file: string) => file,\n        wasmBinary: options.processorOptions.wasmBinary\n      })\n      this.processor = createProcessor(speexModule, {\n        bufferSize: AudioWorkletBufferSize,\n        maxChannels: options.processorOptions.maxChannels,\n        sampleRate: sampleRate\n      })\n      if (this.destroyed) {\n        this.destroy()\n      }\n    })()\n    // TODO: getProperty, setProperty\n  }\n\n  process(\n    inputs: Float32Array[][],\n    outputs: Float32Array[][],\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _parameters: unknown\n  ) {\n    if (inputs.length === 0 || !inputs[0] || inputs[0]?.length === 0) {\n      // no input connected\n      return true\n    }\n    if (!this.processor) {\n      // ignore because loading\n      return true\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.processor.process(inputs[0]!, outputs[0]!)\n    return true\n  }\n\n  private destroy() {\n    this.destroyed = true\n    this.processor?.destroy()\n    this.processor = undefined\n  }\n}\n\nregisterProcessor(id, SpeexWorkletProcessor)\n"],"mappings":"AAAA,IAAAA,EAAA,CAAC,ECAM,IAAMC,EAA4B,CAEvC,YAAa,EAEb,YAAa,EAGb,QAAS,EAET,QAAS,EAGT,QAAS,EAET,QAAS,EAGT,cAAe,EAEf,cAAe,EAqBf,eAAgB,GAEhB,eAAgB,GAGhB,kBAAmB,GAEnB,kBAAmB,GAGnB,mBAAoB,GAEpB,mBAAoB,GAGpB,kBAAmB,GAEnB,kBAAmB,GAGnB,yBAA0B,GAE1B,yBAA0B,GAS1B,kBAAmB,GAGnB,kBAAmB,GAGnB,kBAAmB,GAGnB,kBAAmB,GAGnB,iBAAkB,GAGlB,iBAAkB,GAIlB,iBAAkB,GAIlB,aAAc,GAId,aAAc,GAId,QAAS,GAIT,mBAAoB,GAIpB,cAAe,GAIf,SAAU,GAGV,eAAgB,GAEhB,eAAgB,EAClB,EC7GMC,EAAgB,WAAW,kBAC3BC,EAAgB,WAAW,kBAC3BC,GAAgB,aAAa,kBAE7BC,GAAiB,GAAK,GAAK,EAAI,EAEhBC,GAArB,KAAuC,CAWrC,YACEC,EACAC,EACAC,EACA,CAcA,GAbA,KAAK,YAAcF,EACnB,KAAK,UAAYC,EACjB,KAAK,aAAeC,EAEpB,KAAK,MAAQ,KAAK,YAAY,6BAC5B,KAAK,UACL,KAAK,YACP,EACA,KAAK,eAAiB,KAAK,YAAY,QACrC,KAAK,UAAYP,CACnB,EACA,KAAK,eAAiB,IAAI,WAAW,KAAK,SAAS,EAE/C,CAAC,KAAK,eACR,WAAK,QAAQ,EACP,MAAM,oCAAoC,CAEpD,CAEQ,kBAAmB,CACzB,GAAI,KAAK,aAAe,SACxB,KAAK,WAAa,KAAK,YAAY,QACjC,CACF,EAEI,CAAC,KAAK,YACR,MAAM,MAAM,gCAAgC,CAEhD,CAEQ,IAAIQ,EAAgCC,EAAkB,CAE5D,GADY,KAAK,YAAY,sBAAsB,KAAK,MAAOD,EAAKC,CAAM,IAC9D,GACV,MAAM,IAAI,MAAM,oBAAoBD,GAAK,CAE7C,CAEQ,UAAUA,EAAgC,CAChD,KAAK,iBAAiB,EAGtB,IAAME,EAAe,KAAK,WAAcT,EAGxC,YAAK,IAAIO,EAAK,KAAK,UAAW,EAEvB,KAAK,YAAY,OAAOE,CAAA,CACjC,CACQ,UAAUF,EAAgCG,EAAe,CAC/D,KAAK,iBAAiB,EAGtB,IAAMD,EAAe,KAAK,WAAcT,EACxC,KAAK,YAAY,OAAOS,CAAA,EAAgBC,EAGxC,KAAK,IAAIH,EAAK,KAAK,UAAW,CAChC,CAEQ,WAAWA,EAAgC,CACjD,OAAO,KAAK,UAAUA,CAAG,IAAM,CACjC,CACQ,WAAWA,EAAgCG,EAAgB,CACjE,KAAK,UAAUH,EAAKG,EAAQ,EAAI,CAAC,CACnC,CAEQ,UAAUH,EAAgC,CAChD,KAAK,iBAAiB,EAGtB,IAAME,EAAe,KAAK,WAAcR,GAGxC,YAAK,IAAIM,EAAK,KAAK,UAAW,EAEvB,KAAK,YAAY,QAAQE,CAAA,CAClC,CACQ,UAAUF,EAAgCG,EAAe,CAC/D,KAAK,iBAAiB,EAGtB,IAAMD,EAAe,KAAK,WAAcR,GACxC,KAAK,YAAY,QAAQQ,CAAA,EAAgBC,EAGzC,KAAK,IAAIH,EAAK,KAAK,UAAW,CAChC,CAEQ,eAAeA,EAAgCI,EAAc,CACnE,IAAMC,EAAU,KAAK,YAAY,QAAQD,EAAOX,CAAa,EACvDa,EAAYD,EAAUZ,EAE5B,KAAK,IAAIO,EAAKK,CAAO,EAErB,IAAME,EAAS,IAAI,WAAWH,CAAI,EAC5BI,EAAM,KAAK,YAAY,OAAO,SAASF,EAAWA,EAAYF,CAAI,EACxE,OAAAG,EAAO,IAAIC,CAAG,EAEd,KAAK,YAAY,MAAMH,CAAO,EAEvBE,CACT,CAEA,IAAI,SAAU,CACZ,OAAO,KAAK,WAAWhB,EAA0B,WAAW,CAC9D,CACA,IAAI,QAAQY,EAAgB,CAC1B,KAAK,WAAWZ,EAA0B,YAAaY,CAAK,CAC9D,CAEA,IAAI,KAAM,CACR,OAAO,KAAK,WAAWZ,EAA0B,OAAO,CAC1D,CACA,IAAI,IAAIY,EAAgB,CACtB,KAAK,WAAWZ,EAA0B,QAASY,CAAK,CAC1D,CAEA,IAAI,KAAM,CACR,OAAO,KAAK,WAAWZ,EAA0B,OAAO,CAC1D,CACA,IAAI,IAAIY,EAAgB,CACtB,KAAK,WAAWZ,EAA0B,QAASY,CAAK,CAC1D,CAEA,IAAI,UAAW,CACb,OAAO,KAAK,UAAUZ,EAA0B,aAAa,CAC/D,CACA,IAAI,SAASY,EAAe,CAC1B,KAAK,UAAUZ,EAA0B,cAAeY,CAAK,CAC/D,CAEA,IAAI,WAAY,CACd,OAAO,KAAK,UAAUZ,EAA0B,cAAc,CAChE,CACA,IAAI,UAAUY,EAAe,CAC3B,KAAK,UAAUZ,EAA0B,eAAgBY,CAAK,CAChE,CAEA,IAAI,cAAe,CACjB,OAAO,KAAK,UAAUZ,EAA0B,iBAAiB,CACnE,CACA,IAAI,aAAaY,EAAe,CAC9B,KAAK,UAAUZ,EAA0B,kBAAmBY,CAAK,CACnE,CAEA,IAAI,eAAgB,CAClB,OAAO,KAAK,UAAUZ,EAA0B,kBAAkB,CACpE,CACA,IAAI,cAAcY,EAAe,CAC/B,KAAK,UAAUZ,EAA0B,mBAAoBY,CAAK,CACpE,CAEA,IAAI,cAAe,CACjB,OAAO,KAAK,UAAUZ,EAA0B,iBAAiB,CACnE,CACA,IAAI,aAAaY,EAAe,CAC9B,KAAK,UAAUZ,EAA0B,kBAAmBY,CAAK,CACnE,CAEA,IAAI,oBAAqB,CACvB,OAAO,KAAK,UAAUZ,EAA0B,wBAAwB,CAC1E,CACA,IAAI,mBAAmBY,EAAe,CACpC,KAAK,UAAUZ,EAA0B,yBAA0BY,CAAK,CAC1E,CAEA,IAAI,cAAe,CACjB,OAAO,KAAK,UAAUZ,EAA0B,iBAAiB,CACnE,CACA,IAAI,aAAaY,EAAe,CAC9B,KAAK,UAAUZ,EAA0B,kBAAmBY,CAAK,CACnE,CAEA,IAAI,cAAe,CACjB,OAAO,KAAK,UAAUZ,EAA0B,iBAAiB,CACnE,CACA,IAAI,aAAaY,EAAe,CAC9B,KAAK,UAAUZ,EAA0B,kBAAmBY,CAAK,CACnE,CAEA,IAAI,YAAa,CACf,OAAO,KAAK,UAAUZ,EAA0B,gBAAgB,CAClE,CACA,IAAI,WAAWY,EAAe,CAC5B,KAAK,UAAUZ,EAA0B,iBAAkBY,CAAK,CAClE,CAEA,IAAI,aAAc,CAChB,OAAO,KAAK,UAAUZ,EAA0B,gBAAgB,CAClE,CAEA,IAAI,SAAU,CACZ,OAAO,KAAK,UAAUA,EAA0B,YAAY,CAC9D,CAEA,IAAI,SAAU,CACZ,OAAO,KAAK,UAAUA,EAA0B,YAAY,CAC9D,CAEA,IAAI,KAAM,CACR,OAAO,KAAK,eAAeA,EAA0B,QAAS,KAAK,OAAO,CAC5E,CAEA,IAAI,cAAe,CACjB,OAAO,KAAK,UAAUA,EAA0B,kBAAkB,CACpE,CAEA,IAAI,UAAW,CACb,OAAO,KAAK,eACVA,EAA0B,cAC1B,KAAK,YACP,CACF,CAEA,IAAI,MAAO,CACT,OAAO,KAAK,UAAUA,EAA0B,QAAQ,CAC1D,CAEA,IAAI,WAAY,CACd,OAAO,KAAK,UAAUA,EAA0B,cAAc,CAChE,CACA,IAAI,UAAUY,EAAe,CAC3B,KAAK,UAAUZ,EAA0B,eAAgBY,CAAK,CAChE,CAEQ,gBAAgBM,EAA0B,CAChD,GAAIA,EAAM,SAAW,KAAK,UACxB,MAAM,IAAI,MACR,iCAAiC,KAAK,sBAAsBA,EAAM,SACpE,CAEJ,CAEA,aAAaA,EAAmB,CAC9B,KAAK,gBAAgBA,CAAK,EAE1B,IAAMC,EAAmB,KAAK,eAAiBlB,EAC/C,KAAK,YAAY,OAAO,IAAIiB,EAAOC,CAAgB,EAEnD,IAAMC,EAAM,KAAK,YAAY,sBAC3B,KAAK,MACL,KAAK,cACP,EACMC,EAAgB,KAAK,YAAY,OAAO,SAC5CF,EACAA,EAAmB,KAAK,SAC1B,EACA,OAAAD,EAAM,IAAIG,CAAa,EAEhBD,IAAQ,CACjB,CAEA,QAAQF,EAAqB,CAC3B,KAAK,gBAAgBA,CAAK,EAE1B,QAASI,EAAI,EAAGA,EAAIJ,EAAM,OAAQI,IAEhC,KAAK,eAAeA,CAAA,EAAKJ,EAAMI,CAAA,EAAMlB,GAGvC,IAAMgB,EAAM,KAAK,aAAa,KAAK,cAAc,EAEjD,QAASE,EAAI,EAAGA,EAAIJ,EAAM,OAAQI,IAEhCJ,EAAMI,CAAA,EAAK,KAAK,eAAeA,CAAA,EAAMlB,GAGvC,OAAOgB,CACT,CAEA,SAAU,CACR,KAAK,YAAY,MAAM,KAAK,cAAc,EACtC,KAAK,aAAe,QACtB,KAAK,YAAY,MAAM,KAAK,UAAU,CAE1C,CACF,ECpTIG,IAAU,IAAM,CAClB,IAAIC,EAAa,OAAO,SAAa,KAAe,SAAS,cAAgB,SAAS,cAAc,IAAM,OAE1G,OACF,SAASD,EAAS,CAAC,EAAI,CAEvB,IAAIA,EAAO,OAAOA,EAAQ,IAAYA,EAAO,CAAC,EAAME,EAAoBC,EAAmBH,EAAO,MAAS,IAAI,QAAQ,SAASI,EAAQC,EAAO,CAACH,EAAoBE,EAAQD,EAAmBE,CAAM,CAAC,EAAE,IAAIC,EAAgB,OAAO,OAAO,CAAC,EAAEN,CAAM,EAAMO,EAAW,CAAC,EAAMC,EAAY,iBAAqBC,EAAM,CAACC,EAAOC,IAAU,CAAC,MAAMA,CAAO,EAAMC,EAAmB,OAAOC,GAAQ,SAAaC,EAAsB,OAAO,eAAe,WAAeC,EAAoB,OAAO,SAAS,UAAU,OAAO,QAAQ,UAAU,UAAU,OAAO,QAAQ,SAAS,MAAM,SAAaC,EAAgB,GAAG,SAASC,GAAWC,EAAK,CAAC,OAAGlB,EAAO,WAAsBA,EAAO,WAAckB,EAAKF,CAAe,EAASA,EAAgBE,CAAI,CAAC,IAAIC,GAAMC,GAAUC,EAAWC,IAAkBV,GAAoBE,KAA0BA,EAAuBE,EAAgB,KAAK,SAAS,KAAa,OAAO,SAAU,KAAa,SAAS,gBAAeA,EAAgB,SAAS,cAAc,KAAOf,IAAYe,EAAgBf,GAAce,EAAgB,QAAQ,OAAO,IAAI,EAAGA,EAAgBA,EAAgB,OAAO,EAAEA,EAAgB,QAAQ,SAAS,EAAE,EAAE,YAAY,GAAG,EAAE,CAAC,EAAOA,EAAgB,GAAIG,GAAMI,GAAK,CAAC,IAAIC,EAAI,IAAI,eAAe,OAAAA,EAAI,KAAK,MAAMD,EAAI,EAAK,EAAEC,EAAI,KAAK,IAAI,EAASA,EAAI,YAAY,EAAKV,IAAuBO,EAAWE,GAAK,CAAC,IAAIC,EAAI,IAAI,eAAe,OAAAA,EAAI,KAAK,MAAMD,EAAI,EAAK,EAAEC,EAAI,aAAa,cAAcA,EAAI,KAAK,IAAI,EAAS,IAAI,WAAWA,EAAI,QAAQ,CAAC,GAAEJ,GAAU,CAACG,EAAIE,EAAOC,IAAU,CAAC,IAAIF,EAAI,IAAI,eAAeA,EAAI,KAAK,MAAMD,EAAI,EAAI,EAAEC,EAAI,aAAa,cAAcA,EAAI,OAAO,IAAI,CAAC,GAAGA,EAAI,QAAQ,KAAKA,EAAI,QAAQ,GAAGA,EAAI,SAAS,CAACC,EAAOD,EAAI,QAAQ,EAAE,OAAOE,EAAQ,CAAC,EAAEF,EAAI,QAAQE,EAAQF,EAAI,KAAK,IAAI,CAAC,EAAEF,GAAeK,GAAO,SAAS,MAAMA,GAAY,IAAIC,GAAI5B,EAAO,OAAU,QAAQ,IAAI,KAAK,OAAO,EAAM6B,EAAI7B,EAAO,UAAa,QAAQ,KAAK,KAAK,OAAO,EAAE,OAAO,OAAOA,EAAOM,CAAe,EAAEA,EAAgB,KAAQN,EAAO,YAAaO,EAAWP,EAAO,WAAgBA,EAAO,cAAeQ,EAAYR,EAAO,aAAkBA,EAAO,OAAQS,EAAMT,EAAO,MAAQ,IAAI8B,EAAc9B,EAAO,aAAc8B,EAAW9B,EAAO,YAAc,IAAI+B,GAAc/B,EAAO,eAAkB,GAAQ,OAAO,aAAa,UAAUgC,EAAM,iCAAiC,EAAE,IAAIC,EAAeC,EAAM,GAAUC,GAAeC,EAAY,OAAO,YAAa,IAAY,IAAI,YAAY,MAAM,EAAE,OAAU,SAASC,EAAkBC,EAAYC,EAAIC,EAAe,CAA8C,QAAzCC,EAAOF,EAAIC,EAAmBE,EAAOH,EAAUD,EAAYI,CAAA,GAAS,EAAEA,GAAQD,IAAQ,EAAEC,EAAO,GAAGA,EAAOH,EAAI,IAAID,EAAY,QAAQF,EAAa,OAAOA,EAAY,OAAOE,EAAY,SAASC,EAAIG,CAAM,CAAC,EAAa,QAAPC,EAAI,GAASJ,EAAIG,GAAO,CAAC,IAAIE,EAAGN,EAAYC,GAAA,EAAO,GAAG,EAAEK,EAAG,KAAK,CAACD,GAAK,OAAO,aAAaC,CAAE,EAAE,SAAS,IAAIC,EAAGP,EAAYC,GAAA,EAAO,GAAG,IAAIK,EAAG,MAAM,IAAI,CAACD,GAAK,OAAO,cAAcC,EAAG,KAAK,EAAEC,CAAE,EAAE,SAAS,IAAIC,EAAGR,EAAYC,GAAA,EAAO,GAAmG,IAA5FK,EAAG,MAAM,IAAKA,GAAIA,EAAG,KAAK,GAAGC,GAAI,EAAEC,EAAQF,GAAIA,EAAG,IAAI,GAAGC,GAAI,GAAGC,GAAI,EAAER,EAAYC,GAAA,EAAO,GAAMK,EAAG,MAAOD,GAAK,OAAO,aAAaC,CAAE,MAAM,CAAC,IAAIG,EAAGH,EAAG,MAAMD,GAAK,OAAO,aAAa,MAAMI,GAAI,GAAG,MAAMA,EAAG,IAAI,GAAG,OAAOJ,CAAG,CAAC,SAASK,GAAaC,EAAIT,EAAe,CAAC,OAAOS,EAAIZ,EAAkBa,EAAOD,EAAIT,CAAc,EAAE,EAAE,CAAC,IAAIW,GAAMD,EAAOE,GAAOC,GAAQC,EAAOC,EAAQC,GAAQC,GAAQ,SAASC,GAAmB,CAAC,IAAIC,EAAE1B,EAAW,OAAOjC,EAAO,MAASmD,GAAM,IAAI,UAAUQ,CAAC,EAAE3D,EAAO,OAAUoD,GAAO,IAAI,WAAWO,CAAC,EAAE3D,EAAO,OAAUsD,EAAO,IAAI,WAAWK,CAAC,EAAE3D,EAAO,OAAUkD,EAAO,IAAI,WAAWS,CAAC,EAAE3D,EAAO,QAAWqD,GAAQ,IAAI,YAAYM,CAAC,EAAE3D,EAAO,QAAWuD,EAAQ,IAAI,YAAYI,CAAC,EAAE3D,EAAO,QAAWwD,GAAQ,IAAI,aAAaG,CAAC,EAAE3D,EAAO,QAAWyD,GAAQ,IAAI,aAAaE,CAAC,CAAC,CAAC,IAAIC,GAAcC,EAAa,CAAC,EAAMC,EAAW,CAAC,EAAMC,EAAc,CAAC,EAAMC,GAAmB,GAAM,SAASC,IAAQ,CAAC,GAAGjE,EAAO,OAAsF,IAAxE,OAAOA,EAAO,QAAW,aAAWA,EAAO,OAAU,CAACA,EAAO,MAAS,GAAQA,EAAO,OAAU,QAAQkE,GAAYlE,EAAO,OAAU,MAAM,CAAC,EAAGmE,EAAqBN,CAAY,CAAC,CAAC,SAASO,IAAa,CAACJ,GAAmB,GAAKG,EAAqBL,CAAU,CAAC,CAAC,SAASO,IAAS,CAAC,GAAGrE,EAAO,QAA0F,IAA3E,OAAOA,EAAO,SAAY,aAAWA,EAAO,QAAW,CAACA,EAAO,OAAU,GAAQA,EAAO,QAAW,QAAQsE,GAAatE,EAAO,QAAW,MAAM,CAAC,EAAGmE,EAAqBJ,CAAa,CAAC,CAAC,SAASG,GAAYK,EAAG,CAACV,EAAa,QAAQU,CAAE,CAAC,CAAC,SAASC,GAAUD,EAAG,CAACT,EAAW,QAAQS,CAAE,CAAC,CAAC,SAASD,GAAaC,EAAG,CAACR,EAAc,QAAQQ,CAAE,CAAC,CAAC,IAAIE,EAAgB,EAAMC,EAAqB,KAASC,EAAsB,KAAK,SAASC,GAAiBC,EAAG,CAACJ,IAAqBzE,EAAO,wBAA2BA,EAAO,uBAA0ByE,CAAe,CAAE,CAAC,SAASK,GAAoBD,EAAG,CAA0G,GAAzGJ,IAAqBzE,EAAO,wBAA2BA,EAAO,uBAA0ByE,CAAe,EAAKA,GAAiB,IAAMC,IAAuB,OAAM,cAAcA,CAAoB,EAAEA,EAAqB,MAAQC,GAAsB,CAAC,IAAII,EAASJ,EAAsBA,EAAsB,KAAKI,EAAS,EAAG,CAAC,SAAS/C,EAAMgD,EAAK,CAAIhF,EAAO,SAAYA,EAAO,QAAWgF,CAAI,EAAEA,EAAK,WAAWA,EAAK,IAAInD,EAAImD,CAAI,EAAE9C,EAAM,GAAKC,GAAW,EAAE6C,GAAM,2CAA2C,IAAIC,EAAE,IAAI,YAAY,aAAaD,CAAI,EAAE,MAAA7E,EAAmB8E,CAAC,EAAQA,CAAC,CAAC,IAAIC,GAAc,wCAAwC,SAASC,EAAUC,EAAS,CAAC,OAAOA,EAAS,WAAWF,EAAa,CAAC,CAAC,IAAIG,EAAeA,EAAe,aAAiBF,EAAUE,CAAc,IAAGA,EAAepE,GAAWoE,CAAc,GAAE,SAASC,EAAUC,EAAK,CAAC,GAAG,CAAC,GAAGA,GAAMF,GAAgBvD,EAAY,OAAO,IAAI,WAAWA,CAAU,EAAE,GAAGT,EAAY,OAAOA,EAAWkE,CAAI,EAAE,KAAK,iDAAiD,OAAO1D,EAAP,CAAYG,EAAMH,CAAG,CAAC,CAAC,CAAC,SAAS2D,GAAiBC,EAAW,CAAC,MAAG,CAAC3D,IAAalB,GAAoBE,IAA2B,OAAO,OAAO,WAAmB,MAAM2E,EAAW,CAAC,YAAY,aAAa,CAAC,EAAE,KAAK,SAASC,EAAS,CAAC,GAAG,CAACA,EAAS,GAAO,KAAK,uCAAuCD,EAAW,IAAI,OAAOC,EAAS,YAAe,CAAC,CAAC,EAAE,MAAM,UAAU,CAAC,OAAOJ,EAAUG,CAAU,CAAC,CAAC,EAAU,QAAQ,QAAQ,EAAE,KAAK,UAAU,CAAC,OAAOH,EAAUG,CAAU,CAAC,CAAC,CAAC,CAAC,SAASE,EAAuBF,EAAWG,EAAQC,EAAS,CAAC,OAAOL,GAAiBC,CAAU,EAAE,KAAK,SAASK,EAAO,CAAC,OAAO,YAAY,YAAYA,EAAOF,CAAO,CAAC,CAAC,EAAE,KAAK,SAASG,EAAS,CAAC,OAAOA,CAAQ,CAAC,EAAE,KAAKF,EAAS,SAASG,EAAO,CAACnE,EAAI,0CAA0CmE,CAAM,EAAEhE,EAAMgE,CAAM,CAAC,CAAC,CAAC,CAAC,SAASC,GAAiBH,EAAOL,EAAWG,EAAQb,EAAS,CAAC,MAAG,CAACe,GAAQ,OAAO,YAAY,sBAAsB,YAAY,CAACX,EAAUM,CAAU,GAAG,OAAO,OAAO,WAAmB,MAAMA,EAAW,CAAC,YAAY,aAAa,CAAC,EAAE,KAAK,SAASC,EAAS,CAAC,IAAIjG,EAAO,YAAY,qBAAqBiG,EAASE,CAAO,EAAE,OAAOnG,EAAO,KAAKsF,EAAS,SAASiB,EAAO,CAAC,OAAAnE,EAAI,kCAAkCmE,CAAM,EAAEnE,EAAI,2CAA2C,EAAS8D,EAAuBF,EAAWG,EAAQb,CAAQ,CAAC,CAAC,CAAC,CAAC,EAAcY,EAAuBF,EAAWG,EAAQb,CAAQ,CAAE,CAAC,SAASmB,IAAY,CAAC,IAAIC,EAAK,CAAC,EAAIC,EAAW,EAAE,SAASC,EAAgBN,EAASO,EAAO,CAAC,IAAIC,EAAQR,EAAS,QAAQ/F,OAAAA,EAAO,IAAOuG,EAAQtE,EAAWjC,EAAO,IAAO,EAAK0D,EAAkB,EAAEE,GAAU5D,EAAO,IAAO,EAAKwE,GAAUxE,EAAO,IAAO,CAAI,EAAE8E,GAAoB,kBAAkB,EAASyB,CAAO,CAAC3B,GAAiB,kBAAkB,EAAE,SAAS4B,EAA2B/G,EAAO,CAAC4G,EAAgB5G,EAAO,QAAW,CAAC,CAAC,GAAGO,EAAO,gBAAoB,GAAG,CAAC,OAAOA,EAAO,gBAAmBmG,EAAKE,CAAe,CAAC,OAAOpB,EAAP,CAAUpD,EAAI,sDAAsDoD,CAAC,EAAE9E,EAAmB8E,CAAC,CAAC,CAAE,OAAAgB,GAAiBnE,EAAWuD,EAAec,EAAKK,CAA0B,EAAE,MAAMrG,CAAkB,EAAQ,CAAC,CAAC,CAAC,SAASgE,EAAqBsC,EAAU,CAAC,KAAMA,EAAU,OAAO,GAAGA,EAAU,MAAM,EAAEzG,CAAM,CAAE,CAAC,SAAS0G,GAAuBC,EAAKC,EAAIC,EAAI,CAAC3D,EAAO,WAAWyD,EAAKC,EAAIA,EAAIC,CAAG,CAAC,CAAC,SAASC,IAAY,CAAC,MAAO,WAAU,CAAC,SAASC,GAA0BzH,EAAK,CAAC,IAAIqE,EAAE1B,EAAW,OAAO,GAAG,CAAC,OAAAA,EAAW,KAAK3C,EAAKqE,EAAE,WAAW,QAAQ,EAAE,EAAED,EAAkB,EAAS,CAAC,MAAA,CAAU,CAAC,CAAC,SAASsD,GAAwBC,EAAc,CAAC,IAAIC,EAAQhE,EAAO,OAAO+D,EAAcA,IAAgB,EAAE,IAAIE,EAAYL,GAAW,EAAE,GAAGG,EAAcE,EAAa,MAAO,GAAM,IAAIC,EAAQ,CAACC,EAAEC,IAAWD,GAAGC,EAASD,EAAEC,GAAUA,EAAS,QAAQC,EAAQ,EAAEA,GAAS,EAAEA,GAAS,EAAE,CAAC,IAAIC,EAAkBN,GAAS,EAAE,GAAGK,GAASC,EAAkB,KAAK,IAAIA,EAAkBP,EAAc,SAAS,EAAE,IAAIQ,EAAQ,KAAK,IAAIN,EAAYC,EAAQ,KAAK,IAAIH,EAAcO,CAAiB,EAAE,KAAK,CAAC,EAAME,EAAYX,GAA0BU,CAAO,EAAE,GAAGC,EAAa,MAAO,GAAM,MAAO,EAAK,CAAC,IAAIC,EAAS,CAAC,QAAQ,OAAU,IAAI,UAAU,CAACA,EAAS,SAAS,EAAE,IAAIC,EAAItE,EAAOqE,EAAS,QAAQ,GAAG,CAAA,EAAG,OAAOC,CAAG,EAAE,OAAO,SAAS3E,EAAI,CAAC,IAAI2E,EAAI5E,GAAaC,CAAG,EAAE,OAAO2E,CAAG,CAAC,EAAE,SAASC,GAAUC,EAAG,CAAC,MAAO,GAAE,CAAC,SAASC,GAASD,EAAGE,EAAWC,EAAYC,EAAOC,EAAU,CAAC,MAAO,GAAE,CAAC,IAAIC,GAAiB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,SAASC,GAAUC,EAAOC,EAAK,CAAC,IAAIC,EAAOJ,GAAiBE,CAAA,EAAWC,IAAO,GAAGA,IAAO,KAAKD,IAAS,EAAE1G,GAAIC,GAAKQ,EAAkBmG,EAAO,CAAC,CAAC,EAAEA,EAAO,OAAO,GAAOA,EAAO,KAAKD,CAAI,CAAE,CAAC,SAASE,GAAUX,EAAGY,EAAIC,EAAOC,EAAK,CAAW,QAAN/B,EAAI,EAAU9G,EAAE,EAAEA,EAAE4I,EAAO5I,IAAI,CAAC,IAAIkD,EAAIM,EAAQmF,GAAK,CAAA,EAAOG,EAAItF,EAAQmF,EAAI,GAAG,CAAA,EAAGA,GAAK,EAAE,QAAQI,EAAE,EAAEA,EAAED,EAAIC,IAAKT,GAAUP,EAAG5E,EAAOD,EAAI6F,CAAA,CAAE,EAAEjC,GAAKgC,EAAI,OAAAtF,EAAQqF,GAAM,CAAA,EAAG/B,EAAW,CAAC,CAAC,IAAIT,GAAY,CAAC,EAAIM,GAAuB,EAAIM,GAAwB,EAAIa,GAAU,EAAIE,GAAS,EAAIU,EAAS,EAAMM,GAAI7C,GAAW,EAAM8C,GAAmB,UAAU,CAAC,OAAOA,GAAmBhJ,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAMiJ,GAA6BjJ,EAAO,6BAAgC,UAAU,CAAC,OAAOiJ,GAA6BjJ,EAAO,6BAAgCA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAMkJ,GAAgClJ,EAAO,gCAAmC,UAAU,CAAC,OAAOkJ,GAAgClJ,EAAO,gCAAmCA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAMmJ,GAAsBnJ,EAAO,sBAAyB,UAAU,CAAC,OAAOmJ,GAAsBnJ,EAAO,sBAAyBA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAMoJ,GAAsBpJ,EAAO,sBAAyB,UAAU,CAAC,OAAOoJ,GAAsBpJ,EAAO,sBAAyBA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAMqJ,GAAkB,UAAU,CAAC,OAAOA,GAAkBrJ,EAAO,IAAO,kBAAqB,MAAM,KAAK,SAAS,CAAC,EAAMsJ,GAAQtJ,EAAO,QAAW,UAAU,CAAC,OAAOsJ,GAAQtJ,EAAO,QAAWA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAMuJ,GAAMvJ,EAAO,MAAS,UAAU,CAAC,OAAOuJ,GAAMvJ,EAAO,MAASA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAMwJ,EAAU7E,EAAsB,SAAS8E,GAAW,CAAKD,GAAUE,EAAI,EAAMF,IAAU7E,EAAsB8E,EAAS,EAAE,SAASC,GAAK,CAAuC,GAAnCjF,EAAgB,IAAUR,GAAO,EAAKQ,EAAgB,GAAG,OAAO,SAASkF,GAAO,CAAIH,IAAiBA,EAAU,GAAKxJ,EAAO,UAAa,GAAQ,CAAAkC,IAAakC,GAAY,EAAElE,EAAoBF,CAAM,EAAKA,EAAO,sBAAwBA,EAAO,qBAAwB,EAAEqE,GAAQ,GAAC,CAAIrE,EAAO,WAAcA,EAAO,UAAa,YAAY,EAAE,WAAW,UAAU,CAAC,WAAW,UAAU,CAACA,EAAO,UAAa,EAAE,CAAC,EAAE,CAAC,EAAE2J,EAAM,CAAC,EAAE,CAAC,GAAOA,EAAM,CAAE,CAAC,GAAG3J,EAAO,QAA0F,IAA3E,OAAOA,EAAO,SAAY,aAAWA,EAAO,QAAW,CAACA,EAAO,OAAU,GAAQA,EAAO,QAAW,OAAO,GAAGA,EAAO,QAAW,IAAI,EAAE,EAAG,OAAA0J,EAAI,EAGnyW1J,EAAO,KAChB,CAGA,GAAG,EACI4J,GAAQ5J,GCTR,IAAM6J,GAAkB,CAC7BC,EACA,CACE,WAAAC,EACA,YAAAC,EACA,WAAAC,CACF,IACG,CACH,IAAMC,EAAgB,MAAM,KAC1B,CAAE,OAAQF,CAAY,EACtB,IAAM,IAAIG,GAAkBL,EAAQC,EAAYE,CAAU,CAC5D,EACA,QAAWG,KAAgBF,EACzBE,EAAa,QAAU,GAiCzB,MAAO,CAAE,QAVgB,CAACC,EAAOC,IAAW,CAC1C,IAAMC,EAAW,KAAK,IAAIF,EAAM,OAAQL,CAAW,EACnD,QAASQ,EAAI,EAAGA,EAAID,EAAUC,IAE5BN,EAAcM,CAAC,EAAG,QAAQH,EAAMG,CAAC,CAAE,EAEnCF,EAAOE,CAAC,EAAG,IAAIH,EAAMG,CAAC,CAAE,CAE5B,EAEkB,YA7BhBC,GAGOP,EAAc,CAAC,EAAGO,CAAC,EA0BG,YAxBX,CAClBA,EACAC,IACG,CACH,QAAWN,KAAgBF,EACzBE,EAAaK,CAAC,EAAIC,CAEtB,EAiB4C,QAhB5B,IAAM,CACpB,QAAWN,KAAgBF,EACzBE,EAAa,QAAQ,CAEzB,CAYoD,CACtD,EClDO,IAAMO,GAAK,yCCElB,IAAMC,GAAyB,IAEzBC,EAAN,cAAoC,qBAAsB,CAIxD,YAAYC,EAA8B,CACxC,MAAM,EAHR,KAAQ,UAAY,GAKlB,KAAK,KAAK,iBAAiB,UAAWC,GAAK,CACrCA,EAAE,OAAS,WACb,KAAK,QAAQ,CAEjB,CAAC,GAGC,SAAY,CACZ,IAAMC,EAAc,MAAMC,GAAgB,CACxC,WAAaC,GAAiBA,EAC9B,WAAYJ,EAAQ,iBAAiB,UACvC,CAAC,EACD,KAAK,UAAYK,GAAgBH,EAAa,CAC5C,WAAYJ,GACZ,YAAaE,EAAQ,iBAAiB,YACtC,UACF,CAAC,EACG,KAAK,WACP,KAAK,QAAQ,CAEjB,GAAG,CAEL,CAEA,QACEM,EACAC,EAEAC,EACA,CAKA,OAJIF,EAAO,SAAW,GAAK,CAACA,EAAO,CAAC,GAAKA,EAAO,CAAC,GAAG,SAAW,GAI3D,CAAC,KAAK,WAMV,KAAK,UAAU,QAAQA,EAAO,CAAC,EAAIC,EAAQ,CAAC,CAAE,EACvC,EACT,CAEQ,SAAU,CAChB,KAAK,UAAY,GACjB,KAAK,WAAW,QAAQ,EACxB,KAAK,UAAY,MACnB,CACF,EAEA,kBAAkBE,GAAIV,CAAqB","names":["define_window_default","SpeexPreprocessCtlRequest","I16_BYTE_SIZE","I32_BYTE_SIZE","F32_BYTE_SIZE","I16_MAX_NUMBER","SpeexPreprocessor","speexModule","frameSize","samplingRate","req","output","ctlBuffIndex","value","size","buffPtr","buffIndex","result","res","frame","processBuffIndex","vad","processedBuff","i","Module","_scriptDir","readyPromiseResolve","readyPromiseReject","resolve","reject","moduleOverrides","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","define_window_default","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","scriptDirectory","locateFile","path","read_","readAsync","readBinary","setWindowTitle","url","xhr","onload","onerror","title","out","err","wasmBinary","noExitRuntime","abort","wasmMemory","ABORT","EXITSTATUS","UTF8Decoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","str","u0","u1","u2","ch","UTF8ToString","ptr","HEAPU8","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateMemoryViews","b","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeInitialized","preRun","addOnPreRun","callRuntimeCallbacks","initRuntime","postRun","addOnPostRun","cb","addOnInit","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","callback","what","e","dataURIPrefix","isDataURI","filename","wasmBinaryFile","getBinary","file","getBinaryPromise","binaryFile","response","instantiateArrayBuffer","imports","receiver","binary","instance","reason","instantiateAsync","createWasm","info","wasmImports","receiveInstance","module","exports","receiveInstantiationResult","callbacks","_emscripten_memcpy_big","dest","src","num","getHeapMax","emscripten_realloc_buffer","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","x","multiple","cutDown","overGrownHeapSize","newSize","replacement","SYSCALLS","ret","_fd_close","fd","_fd_seek","offset_low","offset_high","whence","newOffset","printCharBuffers","printChar","stream","curr","buffer","_fd_write","iov","iovcnt","pnum","len","j","asm","___wasm_call_ctors","_speex_preprocess_state_init","_speex_preprocess_state_destroy","_speex_preprocess_run","_speex_preprocess_ctl","___errno_location","_malloc","_free","calledRun","runCaller","run","doRun","speex_default","createProcessor","module","bufferSize","maxChannels","sampleRate","preprocessors","SpeexPreprocessor","preprocessor","input","output","channels","i","k","v","id","AudioWorkletBufferSize","SpeexWorkletProcessor","options","e","speexModule","speex_default","file","createProcessor","inputs","outputs","_parameters","id"]}